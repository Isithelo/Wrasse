<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">
  <title>{{siteName}}</title>
  {{>css}}
</head>
<body id="page-top">
 <script async defer src="https://buttons.github.io/buttons.js"></script>
 {{>header}}
 {{>javascript}}
 <div id='toToppo' style="z-index: 1000;  position:relative"><a href="#" title="Scroll to top of page."><i class="fa fa-arrow-up fa-2x" aria-hidden="true"></i></a></div>
 <style type="text/css">
  #toToppo a {
    padding: 5px 5px;
    background: #000;
    color: #fff;
    position: fixed;
    z-index: -15px;
    bottom: 15px;
    right: 15px;
    display: none;
    text-decoration: none;
    border-radius: 5px
  }
</style>
<script type="text/javascript">
  $(document).ready(function(){
                //Check to see if the window is top if not then display button
                $(window).scroll(function(){
                  if ($(this).scrollTop() > 100) {
                    $('#toToppo a').fadeIn();
                  } else {
                    $('#toToppo a').fadeOut();
                  }
                });
                //Click event to scroll to top
                $('#toToppo a').click(function(){
                  $('html, body').animate({scrollTop : 0},600);
                  return false;
                });
              });
            </script>

            {{#unless user}}

            <header class="masthead">
              <div class="container h-100">
                <div class="row h-100">
                  <div class="col-lg-7 my-auto">
                    <div class="header-content mx-auto">
                      <h1 class="display-1">Cleaner-wrasse</h1>
                      <p class="lead">Nodejs Mongodb Express.js Handlebars.js. Cleaner-Wrasse is an issue tracking CRUD designed to duplicate the Github issue tracking system.</p>
                      <div class="btn-group btn-group-lg" role="group">
                        <a href="/signup" role="button" class="btn btn-outline-light">Get Started</a>
                        <a href="/users" role="button" class="btn btn-outline-light">View Users</a>
                      </div><p></p>
                      <code >npm install cleaner-wrasse</code>
                      <div style="padding-top: 25px">
                        <h4 class="media-heading">Donâ€™t forget to star on GitHub!</h4>
                        <p></p>
                        <a class="github-button" href="https://github.com/jondo89/Wrasse" data-size="large" data-show-count="true" aria-label="Star Isithelo/{{siteName}} on GitHub">Star</a> 
                      </div>
                    </div>
                  </div>
                  <div class="col-lg-5 my-auto">
                   {{> signuphomepage}}  
                 </div>
               </div>
             </div>
           </header>
           {{else}}
           
           {{/unless}}
 
       {{#if user}}
              <div class="container">
             <section >
              <h5 class="display-1" id="introduction">Introduction</h5>
              <h3>Cleaner wrasse is an issue tracking system, designed to duplicate the Github issue tracking system. It is built with nodejs , mongodb , expressjs and handlebars.js. </h3>
              <p>This site is mounted on Github . i.e. the complete live working copy of this site can be duplicated from the GitHub website and deployed to your localhost.</p>
              <p>There are 2 active NPM modules , namely this npm pacakge <code>cleaner-wrasse</code> and <code>fraternate.</code></p>
              <p>Fraternate handles the user management and organizational structure, and the cleaner-wrasse package the issue tracking seen on this page.</p>
            </section>
          </div>
       <hr>

        <div class="container mt-2">
        <section>
          <h1 class="display-1">Functionality</h1>
          <br>
          <br>

          <div class="row">
            <div class="col-3">
              <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                <a class="nav-link active" id="v-pills-home-tab" data-toggle="pill" href="#v-pills-home" role="tab" aria-controls="v-pills-home" aria-selected="true">Create</a>
                <a class="nav-link" id="v-pills-profile-tab" data-toggle="pill" href="#v-pills-profile" role="tab" aria-controls="v-pills-profile" aria-selected="false">Read</a>
                <a class="nav-link" id="v-pills-messages-tab" data-toggle="pill" href="#v-pills-messages" role="tab" aria-controls="v-pills-messages" aria-selected="false">Update</a>
                <a class="nav-link" id="v-pills-settings-tab" data-toggle="pill" href="#v-pills-settings" role="tab" aria-controls="v-pills-settings" aria-selected="false">Delete</a>
              </div>
            </div>
            <div class="col-9">
              <div class="tab-content" id="v-pills-tabContent">
                <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">{{>create}}</div>
                <div class="tab-pane fade" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab">{{>read}}</div>
                <div class="tab-pane fade" id="v-pills-messages" role="tabpanel" aria-labelledby="v-pills-messages-tab">{{>update}}</div>
                <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab">{{>delete}}</div>
              </div>
            </div>
          </div>


        </section>
      </div>



  
   
 </div>
       {{else}}
        <div class="container mt-2">
 
              <div class="container">
             <section >
              <h5 class="display-1" id="introduction">Introduction</h5>
              <h3>Cleaner wrasse is an issue tracking system, designed to duplicate the Github issue tracking system. It is built with nodejs , mongodb , expressjs and handlebars.js. </h3>
              <p>This site is mounted on Github . i.e. the complete live working copy of this site can be duplicated from the GitHub website and deployed to your localhost.</p>
              <p>There are 2 active NPM modules , namely this npm pacakge <code>cleaner-wrasse</code> and <code>fraternate.</code></p>
              <p>Fraternate handles the user management and organizational structure, and the cleaner-wrasse package the issue tracking seen on this page.</p>
            </section>
          </div>

    </div>

  
       {{/if}}


          <hr>
          <div class="container">
           <section >
            <h5 class="display-1" id="introduction">Routing</h5>
            <p>The following express.js routing is applicable to the forms and static page deployments for the issue tracking forms.</p>
            <p></p>
            {{>crud}}
          </div>
          <p></p>
        </section>
      </div>
      <hr>
 


      
      
 
      <div class="container">
       <section >
        <h5 class="display-1">The Mongoose Structure in Mongodb</h5>
        <p>The <a href="https://mongoosejs.com/" target="_blank">Mongoosejs</a> schema used for creation of entries in Mongodb </p>
        <pre>
         var wrasse = mongoose.Schema({
         'username' : String,    //Used to capture the username , Username could be an ID.
         'userID' : String,      //Used to capture the username , Username would be an ID.
         'image' : String,       //Used to capture the Base64 image of the user ; saved in this form to simplify queries. Optional
         'name' : String,        //Username and name are not the same.
         'title' : String,       //As per github , Issues require a title.
         'description' : String, //The html issue input.
         'parentid' : String ,    //used for linking the issue to a specific location.
         'issueType' : String ,   //Additional fine grain control.
         'revision' :{ type: String, default: 'created' }, //Status tracking.
         'created' : { type: Date, default: Date.now },    //Date and time
         'active' : { type: String, default: "open" },     //Track if the issue is open or closed.
       }, { collection: 'issues' });
     </pre>
   </section>
 </div>
 {{>footer}}
</body>
</html>

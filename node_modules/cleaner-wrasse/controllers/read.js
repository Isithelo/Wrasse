///////////////////////////////////////////////
////     SET YOUR APP.JSON DETAILS        //// 
/////////////////////////////////////////////
//Not working ? try double dots on the json url..
var myModule = require('../../../app.json');
var sitename = myModule.sitename
var website = myModule.website
var description = myModule.description
var repo = myModule.repo
var wrasseModel = require('../models/wrasse.js'); 



 //////////////////////////////////
////       VIEW ISSUES        //// 
////////////////////////////////
exports.getissuecount = function(req, res) {
  res.send({
    openCount : req.openCount ,
    closedCount : req.closedCount
  });
};
///////////////////////////////////////////////
///////   GET ALL ISSUES ALL USERS    ////////
/////////////////////////////////////////////
exports.getallissues = function(req, res, next) {
  //console.log('Loading middleware , get all issues')
  //Determine how many forms exist on the server.
  var receivedid =req.params['receivedid'];
  var username =req.params['username'];
  if (typeof receivedid !== 'undefined') {
    var query1 = wrasseModel.find({
      parentid: receivedid
    }).lean()
  }else{
    if (typeof username !== 'undefined') {
        var query1 = wrasseModel.find({
        username: username
      }).lean()
    }else{
      var query1 = wrasseModel.find().lean()
    }
  }
  
  query1.exec(function (err, docs) {
    if(err){console.log('Error Here'); return;}
    var openCount =0  
    for (var i = 0; i < docs.length; i++) {
      if (docs[i].active =='open') {
        openCount = openCount +1
      }
      var closedCount = docs.length-openCount//posible variation that dont work here.
    }
    req.getallissues = docs  
    req.openCount = openCount 
    req.closedCount = closedCount
    req.parentid = receivedid
    req.username = username
    next();
  })
};
//////////////////////////////////
////       NEW ISSUE         //// 
////////////////////////////////
exports.newissue = function(req, res) {
  var parentid =req.params['parentid'];
  res.render('newissue', {
    siteName : sitename,
    parentid : parentid,
    pagetitle:  'Issues | '+sitename+'',
    description : description,
    sitekey:process.env.SITE_KEY,
    getallissues:req.getallissues,
    openCount : req.openCount ,
    closedCount : req.closedCount,
    routing : res.locals.wrasserouting
  });
};
//////////////////////////////////
////       VIEW ISSUES        //// 
////////////////////////////////
exports.readissues = function(req, res) {
  res.render('viewissue', {
    siteName : sitename,
    pagetitle:  'Issues | '+sitename+'',
    description : description,
    sitekey:process.env.SITE_KEY,
    getallissues:req.getallissues,
    openCount : req.openCount ,
    closedCount : req.closedCount,
    routing : res.locals.wrasserouting,
    parentid : req.parentid,
    username :req.username,
    wrassemessage : req.wrassemessage
  });
};
//////////////////////////////////
////     VIEW ISSUE BY ID    //// 
////////////////////////////////
exports.readissuebyid = function(req, res) {
  res.render('viewissuebyid', {
    siteName : sitename,
    description : description,
    sitekey:process.env.SITE_KEY,
    wrassequery:req.wrassequery,
    wrassequeryparent:req.wrassequeryparent,
    routing : res.locals.wrasserouting
  });
};
////////////////////////////////////
////       UPDATE ISSUE        //// 
//////////////////////////////////
exports.updateissue = function(req, res) {
  res.render('updateissue', {
    siteName : sitename,
    description : description,
    sitekey:process.env.SITE_KEY,
    pagetitle:  'Edit Issue | '+sitename+'',
    wrassequery:req.wrassequery,
    routing : res.locals.wrasserouting
  });
};
////////////////////////////////////
////       CLOSE ISSUE        //// 
//////////////////////////////////
exports.closeissue = function(req, res, next) {
  var closeid =req.params['closeid'];
  //find the closeid 
  //update the issue to active to closed
  var wrassequery = wrasseModel.findOneAndUpdate({
    _id: closeid
  },{
    active : 'closed'
  }
  )
  wrassequery.exec(function (err, docs) {
    if(err){console.log('Error Here'); 
    req.wrassemessage = '<span class="badge badge-fail"><i class="fas fa-exclamation-circle"></i> Closed</span> Issue not found.'
    return;}
    req.wrassemessage = '<span class="badge badge-warning"><i class="fas fa-ban"></i> Closed</span> Issue successfully closed.'
    next();
  })
};
///////////////////////////////////////////////
///////   GET ONE ISSUES BY ID        ////////
/////////////////////////////////////////////
exports.getissue = function(req, res, next) {
  var receivedid =req.params['receivedid'];
  //console.log('Loading middleware , get an issue : '+ receivedid)
  //Determine how many forms exist on the server.
  var wrassequery = wrasseModel.findOne({
    _id: receivedid
  }
  ).lean()
  wrassequery.exec(function (err, docs) {
    if(err){console.log('Error Here'); return;}
    req.wrassequery = docs  
    next();
  })
}
///////////////////////////////////////////////
///////   GET ISSUES BY PARENT ID     ////////
/////////////////////////////////////////////
exports.getparent = function(req, res, next) {
  var receivedid =req.params['receivedid'];
  //console.log('Loading middleware , get an issue : '+ receivedid)
  //Determine how many forms exist on the server.
//
var wrassequery = wrasseModel.find({
  parentid: receivedid}
  )
wrassequery.exec(function (err, docs) {
  if(err){console.log('Error Here'); return;}
  req.wrassequeryparent = docs  
  next();
})
}
/////////////////////////////////////////////////////////
///////   AJAX HTML PAGE DEPLOY THE TEMPLATE    ////////
///////////////////////////////////////////////////////
exports.gettemplate = function(req, res) {
  var template =req.params['template'];
  var parentid =req.params['parentid'];
  res.render('partials/'+template,{
    parentid:parentid,
    layout:false
  })
}
//////////////////////////////////////
////       VIEW ISSUES AJAX      //// 
////////////////////////////////////
exports.readissuesajax = function(req, res) {
  res.render('partials/wrasseissuelist', {
    siteName : sitename,
    description : description,
    sitekey:process.env.SITE_KEY,
    getallissues:req.getallissues,
    openCount : req.openCount ,
    closedCount : req.closedCount,
    routing : res.locals.wrasserouting,
    ids:create_uid(),
    status:'open',//Manually set the status to open when called via ajax.
    layout:false
  });
};
//////////////////////////////////////////
////        CREATE UNIQUE ID         //// 
////////////////////////////////////////
function create_uid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
    .toString(16)
    .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
  s4() + '-' + s4() + s4() + s4();
}

var User = require('../../../models/User');
var request = require('request');
var moment = require('moment');
//set the plugin controller directory
var directory =  '../'
 

///////////////////////////////////////////////
////     SET YOUR APP.JSON DETAILS        //// 
/////////////////////////////////////////////
//Not working ? try double dots on the json url..
var myModule = require('../../../app.json');
var sitename = myModule.sitename
var website = myModule.website
var repo = myModule.repo

///////////////////////////////////////////////
////     PULL IN PAYFAST VARIABILES.      //// 
/////////////////////////////////////////////
var URLPAYFAST = process.env.URLPAYFAST
var MERCHANTIDPAYFAST = process.env.MERCHANTIDPAYFAST
var MERCHANTKEYPAYFAST = process.env.MERCHANTKEYPAYFAST

/////////////////////////////////////////////
//////////  UPGRADE PAYFAST PAGE ////////////
///////////////////////////////////////////
exports.upgrade = function(req, res) {
  if (!req.user) {
    return res.redirect('/');
  }
  res.render(directory+'/views/settings/upgrade_payfast', {
    pagetitle: 'Upgrade your plan',
    URLPAYFAST : URLPAYFAST,
    MERCHANTIDPAYFAST : MERCHANTIDPAYFAST,
    MERCHANTKEYPAYFAST : MERCHANTKEYPAYFAST,
    siteName : sitename,
  });
}; 

//////////////////////////////////////////////////////////
//////////  PAYMENT NOTIFICATION FROM PAYFAST ////////////
////////////////////////////////////////////////////////
exports.success = function(req, res) {
	  if (!req.user) {
    return res.redirect('/');
  }
    res.render(directory+'/views/settings/success', {
    pagetitle: 'Upgrade | '+sitename+'',
    siteName : sitename,
    layout :false
  });
}; 

//////////////////////////////////////////////////////////
//////////  PAYMENT NOTIFICATION FROM PAYFAST ////////////
////////////////////////////////////////////////////////
exports.payment_cancelled = function(req, res) {
  res.render(directory+'/views/settings/payment_cancelled', {
    pagetitle: 'Payment Cancelled | '+sitename+'',
    siteName : sitename,
   });
}; 

//////////////////////////////////////////////////////////
//////////  PAYMENT NOTIFICATION FROM PAYFAST ////////////
////////////////////////////////////////////////////////
exports.payment_finished = function(req, res) {
  res.render(directory+'/views/settings/payment_finished', {
    pagetitle: 'Payment Finished | '+sitename+'',
    siteName : sitename,
   });
}; 

//////////////////////////////////////////////////////////
//////////  PAYMENT NOTIFICATION FROM PAYFAST ////////////
////////////////////////////////////////////////////////
exports.payment_cancel_req = function(req, res) {
      User.findById(req.user._id, function(err, user) {
        delete user.plan.payfast 
        user.save(function(err) {
          var subject= '× Cancelled User Subscription | '+sitename // Subject line
          var html =  'An existing user has cancelled their subscription! <pre>'+JSON.stringify(req.user)+'</pre>'
          email(subject,html)
          res.send('Your cancellation has been processed!');
        });
      });
}; 

//////////////////////////////////////////////////////////
//////////  PAYMENT NOTIFICATION FROM PAYFAST ////////////
////////////////////////////////////////////////////////
exports.payment_notify = function(req, res) {
  //Edit the user database to log plan change.
  if (req.body.custom_str2) {
    if (req.body.payment_status == 'COMPLETE') {
      User.findById(req.body.custom_str2, function(err, user) {
        if (user) {
        user.plan.payfast = req.body
        user.save(function(err) {
          var subject= '✔ New User Subscription | '+sitename // Subject line
          var html =  'Congrats a new user has subscribed! <pre>'+JSON.stringify(req.body)+'</pre>'
          email(subject,html)
        });
      } else {
          console.log('Error here hacking ??')
        }
      });
    }
  }
    if (req.body.payment_status == 'CANCELLED') {
      User.findById(req.body.custom_str2, function(err, user) {
        if (user) {
        user.plan.payfast = req.body
        user.save(function(err) {
          var subject= '× Cancelled User Subscription | '+sitename // Subject line
          var html =  'An existing user has cancelled their subscription! <pre>'+JSON.stringify(req.body)+'</pre>'
          email(subject,html)
        });
        } else {
          console.log('Error here hacking ??')
        }
      });
    }
}; 

function email(subject,html){
  //send email notification admin.
  var port = process.env.MAIL_PORT
  var useremail = process.env.MAIL_USERNAME
  var passwords = process.env.MAIL_PASSWORD
  var host = process.env.MAIL_HOST
var temp = {}
'use strict';
var nodemailer = require('nodemailer');
// create reusable transporter object using the default SMTP transport
var transporter = nodemailer.createTransport({
  host: host,
  tls: {
    rejectUnauthorized: false
  },
secure: false, // secure:true for port 465, secure:false for port 587
auth: {
  user: useremail,
  pass: passwords,
}
}); 
var emailofUSer = 'test@test.com'
var nameofUSer = 'Test Here'
var mailOptions = {
from: 'The '+sitename+' Team' + ' ' + '<'+ process.env.MAIL_USERNAME + '>', // sender address
to: process.env.MAIL_USERNAME , // list of receivers
subject: subject, // Subject line
html:  html,
}
transporter.sendMail(mailOptions, (error, info) => {
  if (error) {
    return console.log(error);
  }
  console.log('Message %s sent: %s', info.messageId, info.response);
  return
});
}
